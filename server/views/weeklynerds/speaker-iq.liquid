{% layout "server/layouts/base.liquid" %}


{% block project %}

<ul class="subjects-overview">
    <li><h2> ‚ú® IO Digital ‚ú®</h2></li>
    <li><p>Scroll down to see my notations</p></li>
    <li>  
        <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
         <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19V5m0 14-4-4m4 4 4-4"/>
        </svg></li>
    </li>
</ul>
    {% comment %} <h2>Stop using JS, but instead HTML & CSS </h2> {% endcomment %}

<section class="map-overview">
<div class="window">
  <div class="toolbar">
    <div class="traffic-lights">
      <span class="red"></span>
      <span class="yellow"></span>
      <span class="green"></span>
    </div>
    <div class="title">TWELVETH SPEAKER - IO Digital</div>
  </div>
  <div class="content">
    <aside class="sidebar">
      <div class="section">Favorites</div>
      <ul>
        <li>AirDrop</li>
        <li>Recents</li>
        <li>Applications</li>
        <li>Desktop</li>
        <li>Documents</li>
        <li>Downloads</li>
      </ul>
      <div class="section">iCloud</div>
      <ul>
        <li>iCloud Drive</li>
        <li>Shared</li>
      </ul>
      <div class="section">Tags</div>
      <ul class="tags">
        <li><span class="dot red-dot"></span>Red</li>
        <li><span class="dot orange-dot"></span>Orange</li>
        <li><span class="dot yellow-dot"></span>Yellow</li>
        <li><span class="dot green-dot"></span>Green</li>
        <li><span class="dot blue-dot"></span>Blue</li>
        <li><span class="dot purple-dot"></span>Purple</li>
        <li><span class="dot gray-dot"></span>Gray</li>
      </ul>
    </aside>


  <div class="main-content">
  
    <div class="single-project">
        <section class="introduction-project change-color">
          <ul>
            <li><p class="badge">Speaker 12</p></li>
            <li><h1><span class="highlight">Experience </span> is everything</h1></li>
          </ul>
        </section>


        <article class="project-section">
          <div class="text">
            <h2 class="gradient-greypink"> Summary </h2>
            <p>
            As class, we're invited to IO Digital in Overamstel. They welcomed us with open arms and we had 3 different speakers. Each speaker told a different story about a different subject!
            It was a great experience and the building was really nice! First speaker was Dave Bitter:  the rise of AI voice interfaces ( on the web). Second speaker was Steve jonk: twitter follow bot and follow scraper and the third speaker was Clarke Verdel : How do you automate testing your components like a real user?
            </p>
        </article>

        <article class="project-section">
          <div class="text">
            <h2 class="gradient-greypink"> üí´ Reflectie</h2>
            <p>
                I thought it was really cool that we had an opportunity to visit IO Digital. The building was really nice and the speakers were great! I learned a lot about AI voice interfaces, twitter follow bots and how to automate testing your components like a real user.
                I think it's really important to keep learning and improving your skills, and this event was a great opportunity to do that. We even got free drinks so that was perfect!!
                No, but serious! The AI voice interface was really cool and not a lot of code to make. The twitter bot for Only fans was interesting to say, but not really my cup of tea. The last one really stuck with me, because it's about testing in a big company with different layers
                and I think that I will be using that testing maybe later in my career, hope so!
            </p>
          </div>
        </article>
    </div>

<section class="topic">
  <h2>AI Voice Interfaces & Speech APIs</h2>
  <article>
    <ul>
      <li>History of voice recognition:
        <ul>
          <li>‚Üí 1950 : early beginnings</li>
          <li>‚Üí 2000 : taken over by Google</li>
          <li>‚Üí 2010 : Siri by Apple</li>
        </ul>
      </li>
      <li>The magic black AI box</li>
      <li>Power of hardware</li>
      <li>Human voice 4 key parts of sound</li>
      <li>Speech Recognition Web API:
        <ul>
          <li> ‚ÜíUse <code>if</code> statement to check presence, otherwise create a new instance</li>
          <li> ‚ÜíEvents: <code>onresult</code> and <code>onend</code></li>
        </ul>
      </li>
      <li>Demo: Dave Bitter's CodePen</li>
      <li>Speech synthesis - default voice selection options</li>
      <li>Connecting with AI - usage states:
        <ul>
          <li> ‚Üí Silent</li>
          <li> ‚Üí Sound</li>
          <li> ‚ÜíResponding</li>
        </ul>
      </li>
      <li>AIava built by Dave</li>
      <li>AI-powered speech synthesis</li>
      <li>Combining the two APIs takes too long ‚Üí feels unnatural</li>
      <li>Split audio data:
        <ul>
          <li> ‚Üí First fetch is processed and spoken</li>
          <li> ‚Üí Second fetch is prepared in the meantime</li>
        </ul>
      </li>
      <li>‚ÄúNothing breaks the illusion more than the high latency‚Äù</li>
      <li>AI is just another data source ‚Äî UX makes the difference</li>
      <li><a href="http://techhub.iodigital.com">techhub.iodigital.com</a></li>
    </ul>
  </article>
</section>

<section class="topic">
  <h2>Twitter Scraping & Automation Tools</h2>
  <article>
    <ul>
      <li>Marketing agency (OnlyFans use case): follow and unfollow users</li>
      <li>Used the Twitter API to identify target accounts</li>
      <li>Tools used:
        <ul>
          <li>‚Üí<strong>N8N</strong></li>
          <li>‚Üí<strong>Puppeteer</strong></li>
          <li>‚Üí<strong>Postgres (database)</strong></li>
          <li>‚Üí<strong>Docker</strong></li>
          <li>‚Üí<strong>Ubuntu</strong></li>
        </ul>
      </li>
      <li>Applications should behave as human-like as possible</li>
      <li>Puppeteer scraper:
        <ul>
          <li>‚Üí Collects all data into the database</li>
          <li>‚Üí Inspect <code>network &gt; name</code> to view followers</li>
        </ul>
      </li>
    </ul>
  </article>
</section>

<section class="topic">
  <h2>Component Testing & Developer Tooling</h2>
  <article>
    <ul>
      <li>Company: Miele X (located at Zuidas)</li>
      <li>Role: T-shaped engineer</li>
      <li>Testing is essential ‚Üí code must remain stable</li>
      <li>Each component must always work</li>
      <li>Testing pyramid or trophy model</li>
      <li>E2E tests:
        <ul>
          <li> ‚Üí Do not run in browser</li>
          <li> ‚Üí Run in the background</li>
          <li> ‚Üí Catch unseen issues in live environments</li>
        </ul>
      </li>
      <li>Integration testing: check how parts work together</li>
      <li>Component / Unit testing: test code with code (UI components)</li>
      <li>Static tooling:
        <ul>
          <li>‚Üí Linting small error detection</li>
          <li>‚Üí JavaScript type checker</li>
          <li>‚Üí TypeScript layered on top of JS</li>
          <li>‚Üí ESLint best practices and code hygiene</li>
        </ul>
      </li>
      <li>Vertical axis: complexity</li>
      <li>Horizontal axis: number of tests</li>
      <li>Test for:
        <ul>
          <li>‚Üí Responsiveness</li>
          <li>‚Üí Accessibility (A11y)</li>
          <li>‚Üí Performance</li>
          <li>‚Üí Browser compatibility</li>
          <li>‚Üí Dark / Light mode</li>
          <li>‚Üí Animations</li>
          <li>‚Üí SEO</li>
          <li>‚Üí Multi-tenancy</li>
        </ul>
      </li>
      <li>Uses Node runtime and synthetic DOM (custom browsers)</li>
      <li>Use component data for tests ‚Üí component browser testing with <strong>Vitest</strong></li>
    </ul>
  </article>
</section>






    </div>
  </div>
  
</div>

</section>
{% endblock %}